{"version":3,"sources":["assets/Script/bullet.js"],"names":["cc","Class","extends","Component","properties","speed","speedX","speedY","onLoad","setAngle","a","b","bx","parseInt","x","by","y","normalizedVector","pNormalize","v2","radians","Math","atan2","abs","console","log","onCollisionEnter","other","self","update","dt","node"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAM,GADE;AAERC,gBAAO,CAFC;AAGRC,gBAAO;AAHC,KAHP;;AASL;AACAC,YAAQ,kBAAY,CAEnB,CAZI;AAaLC,cAAS,kBAASC,CAAT,EAAWC,CAAX,EAAa;AACnB;AACA;;AAEC;AACA,aAAKC,EAAL,GAAUC,SAASH,EAAEI,CAAF,GAAIH,EAAEG,CAAf,CAAV;AACA,aAAKC,EAAL,GAAUF,SAASH,EAAEM,CAAF,GAAIL,EAAEK,CAAf,CAAV;;AAGC;AACD,YAAIC,mBAAmBjB,GAAGkB,UAAH,CAAclB,GAAGmB,EAAH,CAAM,KAAKP,EAAX,EAAc,KAAKG,EAAnB,CAAd,CAAvB;AACA;AACA,YAAIK,UAAUC,KAAKC,KAAL,CAAWL,iBAAiBD,CAA5B,EAA+B,CAAEC,iBAAiBH,CAAlD,CAAd;AACA;;AAEA,aAAKR,MAAL,GAAce,KAAKE,GAAL,CAAS,KAAKjB,MAAL,GAAY,CAAZ,GAAgBW,iBAAiBH,CAA1C,CAAd;AACA,aAAKP,MAAL,GAAcc,KAAKE,GAAL,CAAS,KAAKhB,MAAL,GAAY,CAAZ,GAAgBU,iBAAiBD,CAA1C,CAAd;;AAEA;AACA;;AAEA;AACA,YAAG,KAAKJ,EAAL,IAAS,CAAT,IAAY,KAAKG,EAAL,IAAS,CAAxB,EAA0B;AACtB,iBAAKT,MAAL,GAAc,KAAKA,MAAL,GAAc,CAA5B;AACA,iBAAKC,MAAL,GAAc,KAAKA,MAAL,GAAc,CAA5B;AACH,SAHD,MAGM,IAAG,KAAKK,EAAL,IAAS,CAAT,IAAY,KAAKG,EAAL,IAAS,CAAxB,EAA0B;AAC5B,iBAAKT,MAAL,GAAc,KAAKA,MAAL,GAAc,CAAC,CAA7B;AACA,iBAAKC,MAAL,GAAc,KAAKA,MAAL,GAAc,CAA5B;AACH,SAHK,MAGA,IAAG,KAAKK,EAAL,IAAS,CAAT,IAAY,KAAKG,EAAL,IAAS,CAAxB,EAA0B;AAC5B,iBAAKT,MAAL,GAAc,KAAKA,MAAL,GAAc,CAAC,CAA7B;AACA,iBAAKC,MAAL,GAAc,KAAKA,MAAL,GAAc,CAAC,CAA7B;AACH,SAHK,MAGA,IAAG,KAAKK,EAAL,IAAS,CAAT,IAAY,KAAKG,EAAL,IAAS,CAAxB,EAA0B;AAC5B,iBAAKT,MAAL,GAAc,KAAKA,MAAL,GAAc,CAA5B;AACA,iBAAKC,MAAL,GAAc,KAAKA,MAAL,GAAc,CAAC,CAA7B;AACH;;AAEFiB,gBAAQC,GAAR,CAAY,KAAKnB,MAAL,GAAY,GAAZ,GAAgB,KAAKC,MAAjC;;AAGC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGD;;AAEA;AACA;AAEF,KApEI;AAqELmB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC;AACH,KAvEI;;AAyEL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKC,IAAL,CAAUjB,CAAV,IAAe,KAAKR,MAAL,GAAcwB,EAA7B;AACA,aAAKC,IAAL,CAAUf,CAAV,IAAe,KAAKT,MAAL,GAAcuB,EAA7B;AAGH;AA/EI,CAAT","file":"unknown","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed:100,\n        speedX:0,\n        speedY:0\n    },\n\n    // use this for initialization\n    onLoad: function () {\n      \n    },\n    setAngle:function(a,b){\n       // console.log(this.speedX)\n       // console.log(this.speedY)\n\n        // console.log(a.x+\",\"+a.y+\"|\"+b.x+\",\"+b.y)\n        this.bx = parseInt(a.x-b.x);\n        this.by = parseInt(a.y-b.y);\n\n\n         // console.log(this.speedX+\",\"+this.speedY);\n        var normalizedVector = cc.pNormalize(cc.v2(this.bx,this.by));\n        // console.log(normalizedVector)\n        var radians = Math.atan2(normalizedVector.y, - normalizedVector.x); \n        // console.log(radians)\n\n        this.speedX = Math.abs(this.speedX*5 * normalizedVector.x);\n        this.speedY = Math.abs(this.speedY*5 * normalizedVector.y);\n        \n        // this.speedX = parseInt(a.x)/this.speedX;\n        // this.speedY = parseInt(a.y)/this.speedY;\n\n        // console.log(parseInt(a.x)+\",\"+parseInt(a.y));\n        if(this.bx>=0&&this.by>=0){\n            this.speedX = this.speedX * 1;\n            this.speedY = this.speedY * 1;\n        }else if(this.bx<=0&&this.by>=0){\n            this.speedX = this.speedX * -1;\n            this.speedY = this.speedY * 1;\n        }else if(this.bx<=0&&this.by<=0){\n            this.speedX = this.speedX * -1;\n            this.speedY = this.speedY * -1;\n        }else if(this.bx>=0&&this.by<=0){\n            this.speedX = this.speedX * 1;\n            this.speedY = this.speedY * -1;\n        }\n\n       console.log(this.speedX+\",\"+this.speedY)\n     \n\n        // var degree = 180/Math.PI * radians; \n\n        // var rotateSpeed = 2 * Math.PI;  \n        // //那么旋转1弧度所用时间为  \n        // var rotate_1rad_time = 1 / rotateSpeed;  \n        // //所以旋转的时长为  \n        // var rotateDuration = Math.abs(radians * rotate_1rad_time); \n\n        // console.log(rotateDuration+\",\"+degree)\n\n\n       // var t = cc.pDistance(cc.p(a.x,a.y),b)/this.speed;\n\n       // var moveBy = cc.moveBy(t, cc.p(a.x,a.y)).easing(cc.EaseOutSine(3)); \n       // this.node.runAction(moveBy);\n\n    },\n    onCollisionEnter: function (other, self) {\n        // this.node.destroy();\n    },\n    \n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        this.node.x += this.speedX * dt;\n        this.node.y += this.speedY * dt;\n        \n        \n    },\n});\n"]}