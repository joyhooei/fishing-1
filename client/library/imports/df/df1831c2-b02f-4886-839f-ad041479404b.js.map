{"version":3,"sources":["assets/Script/shoot.js"],"names":["cc","Class","extends","Component","properties","bullet","Prefab","bp","Node","onLoad","director","getCollisionManager","enabled","canvas","find","on","EventType","TOUCH_START","onTouchBegan","event","scene","getScene","touchLoc","convertToWorldSpaceAR","x1","x","y1","y","mousePosition","touch","getLocation","x2","y2","normalizedVector","pNormalize","v2","radians","Math","atan2","degree","PI","rotateSpeed","rotate_1rad_time","rotateDuration","abs","rotation","rotateTo","call","callFunc","instantiate","setPosition","setAngle","getComponent","node","getPosition","addChild","seq","sequence","runAction"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACAC,gBAAQL,GAAGM,MALH;AAMRC,YAAGP,GAAGQ;AANE,KAHP;;AAYL;AACAC,YAAQ,kBAAY;AAChBT,WAAGU,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACA;AACA,YAAIC,SAASb,GAAGc,IAAH,CAAQ,QAAR,CAAb;AACAD,eAAOE,EAAP,CAAUf,GAAGQ,IAAH,CAAQQ,SAAR,CAAkBC,WAA5B,EAAyC,KAAKC,YAA9C,EAA4D,IAA5D;;AAEA;AACA;AACA;;AAEA;AACH,KAxBI;;AA0BLA,kBAAc,sBAAUC,KAAV,EAAiB;AAC3B,YAAIC,QAAQpB,GAAGU,QAAH,CAAYW,QAAZ,EAAZ;;AAEA,YAAIC,WAAW,KAAKf,EAAL,CAAQgB,qBAAR,EAAf;AACA;AACA,YAAIC,KAAKF,SAASG,CAAlB;AACA,YAAIC,KAAKJ,SAASK,CAAlB;AACA;AACA,YAAIC,gBAAgBT,MAAMU,KAAN,CAAYC,WAAZ,EAApB;AACA,YAAIC,KAAKH,cAAcH,CAAvB;AACA,YAAIO,KAAKJ,cAAcD,CAAvB;;AAEA;AACA;;AAEA;AACG;AACH,YAAIM,mBAAmBjC,GAAGkC,UAAH,CAAclC,GAAGmC,EAAH,CAAMX,KAAGO,EAAT,EAAYL,KAAGM,EAAf,CAAd,CAAvB;AACA;AACA,YAAII,UAAUC,KAAKC,KAAL,CAAWL,iBAAiBN,CAA5B,EAA+B,CAAEM,iBAAiBR,CAAlD,CAAd;AACA;;AAEA,YAAIc,SAAS,MAAIF,KAAKG,EAAT,GAAcJ,OAA3B;;AAGA,YAAIK,cAAc,IAAIJ,KAAKG,EAA3B;AACA;AACA,YAAIE,mBAAmB,IAAID,WAA3B;AACA;AACA,YAAIE,iBAAiBN,KAAKO,GAAL,CAASR,UAAUM,gBAAnB,CAArB;;AAEA;;AAEA,YAAIG,WAAW7C,GAAG8C,QAAH,CAAY,GAAZ,EAAiBP,SAAO,EAAxB,CAAf;AACA,YAAIQ,OAAO/C,GAAGgD,QAAH,CAAY,YAAU;;AAE7B,gBAAI1B,WAAW,KAAKf,EAAL,CAAQgB,qBAAR,EAAf;;AAEA,gBAAIlB,SAASL,GAAGiD,WAAH,CAAe,KAAK5C,MAApB,CAAb;AACA;AACAA,mBAAOwC,QAAP,GAAmBN,SAAO,EAA1B;AACAlC,mBAAO6C,WAAP,CAAmB5B,SAASG,CAA5B,EAA8BH,SAASK,CAAvC;;AAEA,gBAAIwB,WAAW9C,OAAO+C,YAAP,CAAoB,QAApB,CAAf;AACAD,qBAASA,QAAT,CAAkBvB,aAAlB,EAAgC,KAAKyB,IAAL,CAAUC,WAAV,EAAhC;;AAEE;AACFlC,kBAAMmC,QAAN,CAAelD,MAAf;AAEF,SAfS,EAeR,IAfQ,CAAX;AAgBA;AACA,YAAImD,MAAMxD,GAAGyD,QAAH,CAAYZ,QAAZ,EAAqBE,IAArB,CAAV;AACA,aAAKM,IAAL,CAAUK,SAAV,CAAoBF,GAApB;AAIH;AAlFI,CAAT","file":"unknown","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // bullet: {\n        //     default: null,\n        //     type: cc.Prefeb\n        // }\n        bullet: cc.Prefab,\n        bp:cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        cc.director.getCollisionManager().enabled = true;\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\n        var canvas = cc.find('Canvas');\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\n        \n        // this.newStar = cc.instantiate(this.bullet);\n        // this.bulletScript = newStar.getComponent(\"bullet\");\n        // this.bulletScript.setAngle();\n\n        // console.log(this.bp.getPosition())\n    },\n\n    onTouchBegan: function (event) {\n        var scene = cc.director.getScene();\n\n        var touchLoc = this.bp.convertToWorldSpaceAR()\n        // console.log(this.bp.convertToWorldSpaceAR())\n        var x1 = touchLoc.x;\n        var y1 = touchLoc.y;\n        //jiao du角度\n        var mousePosition = event.touch.getLocation();\n        var x2 = mousePosition.x;\n        var y2 = mousePosition.y;\n        \n        // var deltaRotation = 90-Math.atan2(y2-y1,x2-x1)*180/Math.PI;\n        // this.node.setRotation(deltaRotation-90)\n\n        //炮口旋转\n           // console.log(this.speedX+\",\"+this.speedY);\n        var normalizedVector = cc.pNormalize(cc.v2(x1-x2,y1-y2));\n        // console.log(normalizedVector)\n        var radians = Math.atan2(normalizedVector.y, - normalizedVector.x); \n        // console.log(normalizedVector.x+\",\"+normalizedVector.y)\n\n        var degree = 180/Math.PI * radians; \n\n\n        var rotateSpeed = 2 * Math.PI;  \n        //那么旋转1弧度所用时间为  \n        var rotate_1rad_time = 1 / rotateSpeed;  \n        //所以旋转的时长为  \n        var rotateDuration = Math.abs(radians * rotate_1rad_time); \n\n        // console.log(rotateDuration+\",\"+degree)\n        \n        var rotation = cc.rotateTo(0.3,(degree+90))\n        var call = cc.callFunc(function(){\n\n            var touchLoc = this.bp.convertToWorldSpaceAR()\n\n            var bullet = cc.instantiate(this.bullet);\n            // bullet.position = mousePosition;\n            bullet.rotation = (degree+90)\n            bullet.setPosition(touchLoc.x,touchLoc.y)\n            \n            var setAngle = bullet.getComponent(\"bullet\");\n            setAngle.setAngle(mousePosition,this.node.getPosition());\n\n              // bullet.active = true;\n            scene.addChild(bullet);\n\n         },this);\n        // console.log(radians)\n        var seq = cc.sequence(rotation,call);\n        this.node.runAction(seq)\n\n\n      \n    }\n});\n"]}